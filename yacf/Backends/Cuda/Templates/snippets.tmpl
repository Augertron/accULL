 <%!
       from Backends.Common.TemplateEngine.Functions import is_complex_type
 %> 


<%def name="write_retrieve_all_data_from_device(reduction_vars, shared_vars)">
    /* Begin template: write_retrieve_all_data_from_device , file: device_transfers.tmpl */
    <%namespace name="transfers" file="device_transfers.tmpl"/>
    % for var in reduction_vars:
          cudaMemcpy(reduction_loc_${var.name}, reduction_cu_${var.name}, memSize, cudaMemcpyDeviceToHost);
    % endfor

    ${transfers.write_transfer_from_device(shared_vars, '', '_cu')}     

    checkCUDAError("memcpy");

    /* Clean environment */
    % for var in shared_vars:
    	%if is_complex_type(var):
        	cudaFree(${var.name}_cu);
    	%endif 
    % endfor

    /* End template: write_retrieve_all_data_from_device , file: device_transfers.tmpl */
</%def>

